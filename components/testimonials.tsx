"use client";

import { useState, TouchEvent } from "react";
import useMasonry from "@/utils/useMasonry";
import Image, { StaticImageData } from "next/image";
import { useRouter } from "next/navigation";
import picture2 from "@/public/images/Picture2.jpg";
import picture3 from "@/public/images/Picture3.jpg";
import picture4 from "@/public/images/Picture4.jpg";
import picture5 from "@/public/images/Picture5.jpg";
import picture6 from "@/public/images/Picture6.jpg";

const testimonials = [
  {
    img: picture2,
    clientImg: "@/public/images/client-logo-01.svg",
    name: "MaKayla P.",
    company: "Disney",
    content:
      "As a content creator, I was always on the lookout for a tool that could help me keep up with the demand. The AI-driven content tool has been a game-changer. It generates high-quality content in a fraction of the time it used to take me.",
    categories: [1, 3, 5],
    caption: "Game-changing AI tool",
  },
  {
    img: picture3,
    clientImg: "@/public/images/client-logo-02.svg",
    name: "Andrew K.",
    company: "Samsung",
    content:
      "I've tried several content generation tools, but this AI-driven tool is by far the best. It understands my brand's voice and consistently produces content that resonates with my audience!",
    categories: [1, 2, 4],
    caption: "Best content tool",
  },
  {
    img: picture4,
    clientImg: "@/public/images/client-logo-03.svg",
    name: "Lucy D.",
    company: "Rio",
    content:
      "Content creation used to be a bottleneck in our workflow, but not anymore. This AI tool is intuitive and produces top-notch content every time. It's like having an extra team member who never sleeps! Definitely recommend.",
    categories: [1, 2, 5],
    caption: "Workflow revolution",
  },
  {
    img: picture5,
    clientImg: "@/public/images/client-logo-04.svg",
    name: "Pavel M.",
    company: "Canon",
    content:
      "The quality of the content generated by this AI tool is outstanding. It has taken our content marketing to new heights, allowing us to publish more frequently without compromising on quality. Highly recommended for anyone.",
    categories: [1, 4],
    caption: "Outstanding quality",
  },
  {
    img: picture6,
    clientImg: "@/public/images/client-logo-05.svg",
    name: "Miriam E.",
    company: "Cadbury",
    content:
      "The AI-driven content tool has been a lifesaver for my marketing agency. We can now produce high-quality content for multiple clients quickly and efficiently. It's an invaluable asset to our team.",
    categories: [1, 3, 5],
    caption: "Agency lifesaver",
  },
];

export default function Testimonials() {
  const masonryContainer = useMasonry();
  const [category, setCategory] = useState<number>(1);

  return (
    <div className="mx-auto max-w-6xl px-4 sm:px-6">
      <div className="border-t py-12 [border-image:linear-gradient(to_right,transparent,--theme(--color-slate-400/.25),transparent)1] md:py-20">
        <div className="mx-auto max-w-3xl pb-12 text-center">
          <h2 className="animate-[gradient_6s_linear_infinite] bg-[linear-gradient(to_right,var(--color-gray-200),var(--color-indigo-200),var(--color-gray-50),var(--color-indigo-300),var(--color-gray-200))] bg-[length:200%_auto] bg-clip-text pb-4 font-nacelle text-3xl font-semibold text-transparent md:text-4xl">
            Don't take our word for it
          </h2>
          <p className="text-lg text-indigo-200/65">
            We provide tech-first solutions that empower decision-makers to
            build healthier and happier workspaces from anywhere in the world.
          </p>
        </div>

        <div>
          {/* Buttons remain unchanged */}
          {/* ... (keeping the button section as is) ... */}

          <div
            className="mx-auto grid max-w-sm items-start gap-6 sm:max-w-none sm:grid-cols-2 lg:grid-cols-3"
            ref={masonryContainer}
          >
            {testimonials.map((testimonial, index) => (
              <div key={index} className="group touch-none">
                <Testimonial testimonial={testimonial} category={category}>
                  {testimonial.content}
                </Testimonial>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export function Testimonial({
  testimonial,
  category,
  children,
}: {
  testimonial: {
    img: StaticImageData;
    clientImg: string;
    name: string;
    company: string;
    content: string;
    categories: number[];
    caption: string;
  };
  category: number;
  children: React.ReactNode;
}) {
  const router = useRouter();
  const [isActive, setIsActive] = useState(false);
  const [touchStart, setTouchStart] = useState<number | null>(null);
  const [lastTap, setLastTap] = useState<number>(0);

  // Handle touch start for mobile hover effect
  const handleTouchStart = (e: TouchEvent<HTMLDivElement>) => {
    setTouchStart(e.touches[0].clientY);
    setIsActive(true);
  };

  // Handle touch end to reset and detect double tap
  const handleTouchEnd = (e: TouchEvent<HTMLDivElement>) => {
    const now = Date.now();
    const DOUBLE_TAP_DELAY = 300; // Time in ms to consider it a double tap

    if (now - lastTap < DOUBLE_TAP_DELAY) {
      router.push("/details"); // Redirect to details page on double tap
    } else {
      setIsActive(false);
    }
    setLastTap(now);
  };

  // Handle touch move to prevent scroll interference
  const handleTouchMove = (e: TouchEvent<HTMLDivElement>) => {
    if (touchStart !== null) {
      const touchMove = e.touches[0].clientY;
      const diff = Math.abs(touchMove - touchStart);
      if (diff > 10) {
        setIsActive(false); // Cancel hover effect if scrolling
      }
    }
  };

  return (
    <article
      className={`relative rounded-2xl bg-linear-to-br from-gray-900/50 via-gray-800/25 to-gray-900/50 backdrop-blur-xs transition-opacity before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(to_right,var(--color-gray-800),var(--color-gray-700),var(--color-gray-800))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)] ${!testimonial.categories.includes(category) ? "opacity-30" : ""} w-[300px] h-[200px] sm:w-[250px] sm:h-[180px]`} // Adjusted for mobile
      onTouchStart={handleTouchStart}
      onTouchMove={handleTouchMove}
      onTouchEnd={handleTouchEnd}
    >
      <div className="relative w-full h-full">
        <Image
          src={testimonial.img}
          alt={testimonial.name}
          layout="fill"
          objectFit="cover"
          className="rounded-2xl"
        />

        {/* Overlay content - all hidden until hover/touch */}
        <div
          className={`absolute inset-0 bg-black/70 p-4 flex flex-col justify-between opacity-0 transition-opacity duration-300 rounded-2xl ${
            isActive || "group-hover:opacity-100"
          }`}
        >
          <div>
            <div className="text-white text-base sm:text-sm font-semibold mb-2 bg-black/50 px-2 py-1 rounded">
              {testimonial.caption}
            </div>
            <p className="text-indigo-200/90 text-xs sm:text-[0.65rem] before:content-['“'] after:content-['”'] overflow-y-auto">
              {children}
            </p>
          </div>
          <div className="flex items-center gap-2 mt-2">
            <div className="text-xs sm:text-[0.65rem] font-medium text-white">
              <span>{testimonial.name}</span>
              <span className="text-gray-400"> - </span>
              <a
                className="text-indigo-200 transition-colors hover:text-indigo-400"
                href="#0"
              >
                {testimonial.company}
              </a>
            </div>
          </div>
        </div>
      </div>
    </article>
  );
}